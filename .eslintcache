[{"C:\\Users\\new\\Desktop\\reactjsproject\\src\\index.js":"1","C:\\Users\\new\\Desktop\\reactjsproject\\src\\App.js":"2","C:\\Users\\new\\Desktop\\reactjsproject\\src\\Components\\Footer.js":"3","C:\\Users\\new\\Desktop\\reactjsproject\\src\\Components\\Header.js":"4","C:\\Users\\new\\Desktop\\reactjsproject\\src\\ScreenPages\\HomePage.js":"5","C:\\Users\\new\\Desktop\\reactjsproject\\src\\ScreenPages\\Contact.js":"6","C:\\Users\\new\\Desktop\\reactjsproject\\src\\ScreenPages\\NotFound.js":"7","C:\\Users\\new\\Desktop\\reactjsproject\\src\\ScreenPages\\WordLearning\\Worddisplay.js":"8","C:\\Users\\new\\Desktop\\reactjsproject\\src\\ScreenPages\\WordLearning\\ResultDisplay.js":"9","C:\\Users\\new\\Desktop\\reactjsproject\\src\\ScreenPages\\WordLearning\\Words.js":"10","C:\\Users\\new\\Desktop\\reactjsproject\\src\\ScreenPages\\WordLearning\\WordLearning.js":"11","C:\\Users\\new\\Desktop\\reactjsproject\\src\\ScreenPages\\ToDoList\\ToDoList.js":"12"},{"size":239,"mtime":1607572554160,"results":"13","hashOfConfig":"14"},{"size":1048,"mtime":1610018476711,"results":"15","hashOfConfig":"14"},{"size":716,"mtime":1607656625405,"results":"16","hashOfConfig":"14"},{"size":2178,"mtime":1608217121868,"results":"17","hashOfConfig":"14"},{"size":281,"mtime":1607926314375,"results":"18","hashOfConfig":"14"},{"size":147,"mtime":1607869643480,"results":"19","hashOfConfig":"14"},{"size":329,"mtime":1607875120384,"results":"20","hashOfConfig":"14"},{"size":1549,"mtime":1610016964913,"results":"21","hashOfConfig":"14"},{"size":1762,"mtime":1609954592006,"results":"22","hashOfConfig":"14"},{"size":1669,"mtime":1610012027667,"results":"23","hashOfConfig":"14"},{"size":2958,"mtime":1610017286175,"results":"24","hashOfConfig":"14"},{"size":2021,"mtime":1610213524447,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ppqmkp",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\new\\Desktop\\reactjsproject\\src\\index.js",[],["52","53"],"C:\\Users\\new\\Desktop\\reactjsproject\\src\\App.js",[],"C:\\Users\\new\\Desktop\\reactjsproject\\src\\Components\\Footer.js",[],"C:\\Users\\new\\Desktop\\reactjsproject\\src\\Components\\Header.js",[],"C:\\Users\\new\\Desktop\\reactjsproject\\src\\ScreenPages\\HomePage.js",[],"C:\\Users\\new\\Desktop\\reactjsproject\\src\\ScreenPages\\Contact.js",[],"C:\\Users\\new\\Desktop\\reactjsproject\\src\\ScreenPages\\NotFound.js",[],"C:\\Users\\new\\Desktop\\reactjsproject\\src\\ScreenPages\\WordLearning\\Worddisplay.js",[],"C:\\Users\\new\\Desktop\\reactjsproject\\src\\ScreenPages\\WordLearning\\ResultDisplay.js",[],"C:\\Users\\new\\Desktop\\reactjsproject\\src\\ScreenPages\\WordLearning\\Words.js",[],"C:\\Users\\new\\Desktop\\reactjsproject\\src\\ScreenPages\\WordLearning\\WordLearning.js",["54"],"import React, { useState, useEffect, useRef } from 'react'\r\n\r\nimport WordDisplay from './Worddisplay'\r\nimport ResultDisplay from './ResultDisplay'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport Words from './Words'\r\n\r\nconst WordLearning = () => {\r\n  const [words, setWords] = useState(Words)\r\n\r\n  var randomNumber = Math.floor(Math.random() * words.length)\r\n\r\n  const [word, setWord] = useState(words[randomNumber])\r\n  const [wordInput, setWordInput] = useState('')\r\n  const [disabled, setDisabled] = useState(true)\r\n  const [time, setTime] = useState(30)\r\n  const [corretResult, setCorrectResult] = useState([])\r\n  const [inCorretResult, setInCorrectResult] = useState([])\r\n  const [correctCount, setCorrectCount] = useState(0)\r\n  const [animateTimer, setAnimateTimer] = useState(null)\r\n\r\n  const inputRef = useRef(null)\r\n\r\n  const checkAnswer = () => {\r\n    if (wordInput.trim() === word) {\r\n      setCorrectResult((prevResult) => [...prevResult, wordInput])\r\n      setCorrectCount((prevCount) => prevCount + 1)\r\n      return\r\n    }\r\n    if (wordInput.trim() !== word) {\r\n      setInCorrectResult((prevIncorrectResult) => [\r\n        ...prevIncorrectResult,\r\n        wordInput,\r\n      ])\r\n    }\r\n  }\r\n  var newRandomNumber = Math.floor(Math.random() * words.length)\r\n\r\n  const onKeyPressEventHendler = (e) => {\r\n    if (e.charCode === 13 && wordInput.trim() !== '') {\r\n      checkAnswer()\r\n      setWord(words[newRandomNumber])\r\n      setWordInput('')\r\n    }\r\n  }\r\n\r\n  const startClicked = () => {\r\n    setDisabled(() => !disabled)\r\n\r\n    if (disabled === false) {\r\n      setWordInput('')\r\n      setCorrectResult([])\r\n      setInCorrectResult([])\r\n      setCorrectCount(0)\r\n      setTime(30)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (time <= 30 && time !== 0 && disabled === false) {\r\n      setTimeout(() => setTime((prevTime) => prevTime - 1), 1000)\r\n      inputRef.current.focus()\r\n    } else if (disabled) {\r\n      setTime(30)\r\n      setAnimateTimer(null)\r\n    } else if (time === 0) {\r\n      setDisabled(true)\r\n    }\r\n    if (time <= 10) {\r\n      setAnimateTimer('flashtimer 2s infinite')\r\n    }\r\n  }, [disabled, time])\r\n\r\n  /* useEffect(() => {\r\n    setWord(words[newRandomNumber])\r\n  }, ['']) */\r\n\r\n  return (\r\n    <Container className=\"h-100\">\r\n      <Row>\r\n        <Col>\r\n          <WordDisplay\r\n            wordInput={wordInput}\r\n            setWordInput={setWordInput}\r\n            word={word}\r\n            disabled={disabled}\r\n            time={time}\r\n            inputRef={inputRef}\r\n            animateTimer={animateTimer}\r\n            startClicked={startClicked}\r\n            onKeyPressEventHendler={onKeyPressEventHendler}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <ResultDisplay\r\n            correctCount={correctCount}\r\n            correctResult={corretResult}\r\n            inCorretResult={inCorretResult}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default WordLearning\r\n","C:\\Users\\new\\Desktop\\reactjsproject\\src\\ScreenPages\\ToDoList\\ToDoList.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":9,"column":17,"nodeType":"61","messageId":"62","endLine":9,"endColumn":25},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'setWords' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]